ggplot(aes(x = count, y = fct_reorder(country, count)) +
p_clean %>%
filter(polymer != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean
p_clean %>%
filter(polymer != 'total')
p_clean %>%
filter(polymer != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col()
p_clean %>%
filter(polymer != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, max(count)))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
ggplot(aes(x = count, y = fct_reorder(country, count)) +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer  == 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer  != 'total') %>%
ggplot(aes(x = count, y = fct_reorder(country, count))) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer  != 'total') %>%
ggplot(aes(x = count, y = country)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x")
p_clean %>%
filter(polymer  != 'total') %>%
ggplot(aes(x = count, y = country)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean
p_clean %>%
mutate (country = factor(country))
plastics %>%
filter(year == 2019,
parent_company == "Grand Total",
country != "EMPTY") %>%
select(country, year, hdpe, ldpe,pet, pp, pvc) %>%
group_by(country) %>%
mutate(total = sum(hdpe, ldpe, pet, pp, pvc, na.rm = T)) %>%
arrange(desc(total)) %>%
ungroup() %>%
top_n(6) %>%
pivot_longer(cols = c(hdpe, ldpe, pet, pp, pvc, total),
names_to = "polymer", values_to = "count") %>% mutate (country = factor(country)) -> p_clean
p_clean %>%
filter(polymer  != 'total') %>%
ggplot(aes(x = count, y = country)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
level(p_clean$country)
levels(p_clean$country)
table(p_clean$count)
table(p_clean$country, p_clean$count)
plastics %>%
filter(year == 2019,
parent_company == "Grand Total",
country != "EMPTY") %>%
select(country, year, hdpe, ldpe,pet, pp, pvc) %>%
group_by(country) %>%
mutate(total = sum(hdpe, ldpe, pet, pp, pvc, na.rm = T)) %>%
arrange(desc(total)) %>%
ungroup() %>%
top_n(6) %>%
pivot_longer(cols = c(hdpe, ldpe, pet, pp, pvc, total),
names_to = "polymer", values_to = "count") %>%
mutate (country = as.factor(country)) -> p_clean
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = count, y = country)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = fct_reorder(country, count)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
?fct_reorder2()
levels(p_clean$country) <- c("NIGERIA"  ,"Cameroon" ,   "Indonesia"  , "Kenya" ,"Philippines","Vietnam"  )
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = fct_reorder2(country, count)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = fct_reorder(country, count)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
mutate(polymer = as.factor(polymer) %>%
)
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
levels(p_clean$country) <- c("Cameroon" ,   "Indonesia"  , "Kenya" ,"Philippines","Vietnam", "NIGERIA"   )
```{r}
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
plastics %>%
filter(year == 2019,
parent_company == "Grand Total",
country != "EMPTY") %>%
select(country, year, hdpe, ldpe,pet, pp, pvc) %>%
group_by(country) %>%
mutate(total = sum(hdpe, ldpe, pet, pp, pvc, na.rm = T)) %>%
arrange(desc(total)) %>%
ungroup() %>%
top_n(6) %>%
pivot_longer(cols = c(hdpe, ldpe, pet, pp, pvc, total),
names_to = "polymer", values_to = "count") %>%
mutate (country = as.factor(country)) -> p_clean
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
library(tidytext)
install.packages(tidytext)
install.packages("tidytext")
library(tidytext)
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col() +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x") +
theme(
text = element_text(family = "IBMPlexSans")
)
plastics %>%
filter(year == 2019,
parent_company == "Grand Total",
country != "EMPTY") %>%
select(country, year, hdpe, ldpe,pet, pp, pvc) %>%
group_by(country) %>%
mutate(total = sum(hdpe, ldpe, pet, pp, pvc, na.rm = T)) %>%
#arrange(desc(total)) %>%
ungroup() %>%
top_n(6) %>%
pivot_longer(cols = c(hdpe, ldpe, pet, pp, pvc, total),
names_to = "polymer", values_to = "count") %>%
mutate (country = as.factor(country)) -> p_clean
p_clean
p_clean %>%
filter(polymer  != 'total')
p_clean %>%
select(-year) %>%
filter(polymer  != 'total')
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")
library(tidytext)
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = count, y = country, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")
?reorder_within
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = country, y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered()
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = country, y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(#polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = country, y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer),
country = reorder_within(country, count, polymer)) %>%
ggplot(aes(x = country, y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = reorder_within(country, count, polymer), y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = reorder_within(country, count, polymer), y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0))
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = reorder_within(country, count, polymer, na.rm = T), y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0))
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
#mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = reorder_within(country, count, polymer), y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0))
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
#mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(x = reorder_within(country, count, polymer), y = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(.~polymer, scales = "free_x")  +
coord_flip() +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0))
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
#mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(y = reorder_within(country, count, polymer), x = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(.~polymer, scales = "free_x")  +
scale_y_continuous(expand = c(0,0))
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
#mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(y = reorder_within(country, count, polymer), x = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(.~polymer, scales = "free_x")  +
theme(
text = element_text(family = "IBMPlexSans")
)
p_clean %>%
select(-year) %>%
filter(polymer  != 'total') %>%
#mutate(polymer = as.factor(polymer)) %>%
ggplot(aes(y = fct_reorder2(country, count, polymer), x = count, fill = polymer)) +
geom_col(show.legend = FALSE) +
facet_wrap(.~polymer, scales = "free_x")  +
theme(
text = element_text(family = "IBMPlexSans")
)
source('~/OneDrive/Learning R/TidyTuesday/TidyTuesdayPrac/gt_table_prac.R')
playoff_salary %>%
#head() %>%
gt() %>%
data_color(
columns = vars(Total),
colors = scales::col_numeric(
# custom defined values - notice that order matters!
palette = c("#ffffff", "#f2fbd2", "#c9ecb4", "#93d3ab", "#35b0ab"),
domain = NULL
)) %>%
data_color(
columns = vars(salary),
colors = scales::col_numeric(
# custom defined values - notice that order matters!
palette = c("#ffffff", "#f2fbd2", "#c9ecb4", "#93d3ab", "#35b0ab"),
domain = NULL
)) %>%
fmt_currency(
columns = vars(salary),
decimals = 1,
pattern = "{x} M"
) %>%
cols_align(align = "right",
columns = vars(salary)) %>%
tab_style(
style = list(
cell_borders(
sides = "left",
color = "black",
weight = px(3)
)
),
locations = list(
cells_body(
columns = vars(Total)
)
)
) %>%
tab_style(
style = list(
cell_borders(
sides = "bottom",
color = "black",
weight = px(3)
)
),
locations = list(
cells_column_labels(
columns = gt::everything()
)
)
) %>%
cols_label(
player = "Player",
salary = "Salary"
) %>%
tab_source_note("Table: @MrOchiwar") %>%
tab_header(
title = md("**2014-2018 Salary and Playoff Appearances**"),
subtitle = "QBS limited to playoff games where they threw a pass"
)
install.packages("rmarkdown")
table
topbottom5 %>%
mutate(
cost_km_millions = round(cost_km_millions, 2),
length = round(length, 1)
) %>%
select(
City = city,
"Start year" = start_year,
Line = line,
"Length (km)" = length,
"Cost (millions) per km" = cost_km_millions
)
library(tidyverse)
library(countrycode)
library(gt)
library(paletteer)
topbottom5 %>%
mutate(
cost_km_millions = round(cost_km_millions, 2),
length = round(length, 1)
) %>%
select(
City = city,
"Start year" = start_year,
Line = line,
"Length (km)" = length,
"Cost (millions) per km" = cost_km_millions
)
topbottom5 %>%
mutate(
cost_km_millions = round(cost_km_millions, 2),
length = round(length, 1)
) %>%
select(
City = city,
"Start year" = start_year,
Line = line,
"Length (km)" = length,
"Cost (millions) per km" = cost_km_millions
) %>%
gt()
data.frame(name = names(islands),
size = islands)
data.frame(name = names(islands),
size = islands) %>%
slice(1:10)
data.frame(name = names(islands),
size = islands) %>%
arrange(desc(size)) %>%
slice(1:10)
island_tbl <- data.frame(name = names(islands),
size = islands) %>%
arrange(desc(size)) %>%
slice(1:10)
island_tbl %>%
gt()
